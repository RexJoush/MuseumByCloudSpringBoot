apiVersion: v1
kind: Service
metadata:
  annotations:
    kubectl.kubernetes.io/last-applied-configuration: |
      {"apiVersion":"v1","kind":"Service","metadata":{"annotations":{},"creationTimestamp":"2021-04-01T09:57:39Z","labels":{"app":"nginx","bbb":"bbb"},"managedFields":[{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{".":{},"f:app":{}}},"f:spec":{"f:externalTrafficPolicy":{},"f:ports":{".":{},"k:{\"port\":88,\"protocol\":\"TCP\"}":{".":{},"f:nodePort":{},"f:port":{},"f:protocol":{},"f:targetPort":{}}},"f:selector":{".":{},"f:app":{}},"f:sessionAffinity":{},"f:type":{}}},"manager":"kubectl","operation":"Update","time":"2021-04-01T09:57:39Z"},{"apiVersion":"v1","fieldsType":"FieldsV1","fieldsV1":{"f:metadata":{"f:labels":{"f:bbb":{}}}},"manager":"dashboard","operation":"Update","time":"2021-04-12T10:31:23Z"}],"name":"nginx-service","namespace":"default","resourceVersion":"7596843","selfLink":"/api/v1/namespaces/default/services/nginx-service","uid":"01a10194-50ad-4dc2-8191-4791758c64d2"},"spec":{"clusterIP":"10.0.0.252","externalTrafficPolicy":"Cluster","ports":[{"nodePort":40058,"port":88,"protocol":"TCP","targetPort":80}],"selector":{"app":"nginx"},"sessionAffinity":"None","type":"NodePort"},"status":{"loadBalancer":{}}}
  creationTimestamp: '2021-04-01T09:57:39Z'
  finalizers: []
  labels:
    app: nginx
    bbb: bbb
  managedFields:
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1: {}
      manager: dashboard
      operation: Update
      time: '2021-04-12T10:31:23Z'
    - apiVersion: v1
      fieldsType: FieldsV1
      fieldsV1: {}
      manager: kubectl
      operation: Update
      time: '2021-04-12T10:32:53Z'
  name: nginx-service
  namespace: default
  ownerReferences: []
  resourceVersion: '7597171'
  selfLink: /api/v1/namespaces/default/services/nginx-service
  uid: 01a10194-50ad-4dc2-8191-4791758c64d2
spec:
  type: NodePort
  clusterIP: 10.0.0.252
  clusterIPs: []
  externalIPs: []
  externalTrafficPolicy: Cluster
  ipFamilies: []
  loadBalancerSourceRanges: []
  ports:
    - nodePort: 40058
      port: 88
      protocol: TCP
      targetPort:
        kind: 0
        intVal: 80
  selector:
    app: nginx
  sessionAffinity: None
  topologyKeys: []
status:
  conditions: []
  loadBalancer:
    ingress: []
